<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAHAZGQBwGRkMcBkZgXAZGUpwGRkAcBkZADwU3AA8FNwAPBTcSjwU3IE8FNwMPBTcAAAA
        AAAAAAAAAAAAAHAYGQBwGBkKcBkZhXAZGflwGRnZcBkZP20ZIwA/FNIAPBTcPzwU3Nk8FNz5PBTchT0T
        2wo8E9wAAAAAAICAAACElwAKeEwNSHAZGdVwGRn/cBkZ/3AZGdpxGRY+OhTkPjwU3No8FNz/PBTc/zwU
        3NUeUO1IAKb/CgCM/wCAgAAKgIAAhYCAANd4TA2KcBgZ23AZGf9wGRn/bxke4EsVpeA7FN7/PBTc/z0T
        3NseUO2KAIz/1wCM/4UAjP8KgIAAgYCAAPiAgAD/gIEA23hNDYlwGBfbcBkY/3AZGP9oGDb/SRWs/zwS
        3dseUO2JAI3/2wCM//8AjP/4AIz/gYCAAEmAgADZgIAA/4CAAP+BggDaZjhJqmkXMfxxGRf/cRkX/2oX
        MvwzRrOqAI7/2gCM//8AjP//AIz/2QCM/0mAgAAAgIAAP4CAANqBgQD/b2Y2/0Ujv/tKFan/aRgz/3EY
        Fv9SOFb/DX/j+wCN//8AjP//AIz/2gCM/z8AjP8AhYgAAHl1CwCDhQA/bWI+4UYku/87E9//OxPf/00Y
        nO1NO2PtD33g/wCN//8Ajf//BIn34QKN+j8FgfQAAJT/ADgN6gBDH8YAOxPePz4X1uE8E93/OxPe/0Ui
        v/9oYEjtKoas7QCN//8Ajf//EXvc/1E5WeF1FA4/ZSQwAHgRCQA8FNwAPBTcPzwU3No8FNz/PBPd/0Ug
        wPtvYzr/gYEA/2+CIv8iirv/D3zg+1U1Uf9xGBb/cBkZ2nAZGT9wGRkAPBTcSTwU3Nk8FNz/PBTc/zwS
        3to8WKmrb4Mj/IGAAP+BgAD/cIMg/FdjUKpxFxfacBkZ/3AZGf9wGRnZcBkZSTwU3IE8FNz4PBTc/z0T
        3NweUO2KAI7/2yCJwP9tgib/gYAA/4GAAP+CgQDbeEwNiXAYGdtwGRn/cBkZ+HAZGYE8FNwKPBTchTwU
        3NceUO2KAI3/2wCM//8AjP//JIm34HyAB+CAgAD/gIAA/4CBANt4TQ2KcBkZ13AZGYVwGRkKPBTcAEkA
        1AoeUO1IAIz/1QCM//8AjP//AIz/2gCN/z6CgAA+gIAA2oCAAP+AgAD/gIAA1XhNDUhsAh4KcBkZAAAA
        AAAAjf8AAI7/CgCM/4UAjP/5AIz/2QCM/z8Gi/IAeoENAICAAD+AgADZgIAA+YCAAIWAggAKgIEAAAAA
        AAAAAAAAAAAAAACM/wAAjP8MAIz/gQCM/0oAjP8AAIz/AICAAACAgAAAgIAASoCAAIGAgAAMgIAAAAAA
        AAAAAAAA48cAAMGDAACAAQAAAAAAAAAAAAAAAAAAgAEAAMADAADAAwAAgAEAAAAAAAAAAAAAAAAAAIAB
        AADBgwAA48cAAA==
</value>
  </data>
</root>